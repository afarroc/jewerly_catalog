#!/bin/bash
# Script de construcci√≥n para Render

set -e  # Salir si hay alg√∫n error

echo "Iniciando construcci√≥n de la aplicaci√≥n..."

# Instalar dependencias
echo "Instalando dependencias..."
pip install --upgrade pip
pip install -r requirements.txt

# Verificar instalaci√≥n de dependencias cr√≠ticas
echo "Verificando dependencias cr√≠ticas..."
python3 -c "import django; print('Django OK')"
python3 -c "import gunicorn; print('Gunicorn OK')"
python3 -c "import whitenoise; print('WhiteNoise OK')"

# Crear directorios necesarios
echo "Creando directorios necesarios..."
mkdir -p staticfiles media logs

# Configurar variables de entorno
echo "Configurando variables de entorno..."
export DJANGO_SETTINGS_MODULE=jewerly_catalog.settings_production
export PYTHONPATH=$PYTHONPATH:$(pwd)

# Verificar configuraci√≥n de Django
echo "Verificando configuraci√≥n de Django..."
python3 manage.py check --deploy

# Ejecutar migraciones
echo "Ejecutando migraciones de base de datos..."
python3 manage.py makemigrations --noinput
python3 manage.py migrate --noinput

# Recolectar archivos est√°ticos (FORZAR en producci√≥n)
echo "Procesando archivos est√°ticos..."
echo "DEBUG variable: '$DEBUG'"
echo "Current working directory: $(pwd)"
echo "Python path: $PYTHONPATH"
echo "Django settings module: $DJANGO_SETTINGS_MODULE"

# FORZAR ejecuci√≥n de collectstatic en Render (producci√≥n)
echo "üîß FORZANDO ejecuci√≥n de collectstatic en producci√≥n..."
echo "‚úÖ Ejecutando collectstatic con compresi√≥n..."

# Verificar que el directorio static existe y tiene archivos
if [ -d "static" ]; then
    STATIC_SOURCE_COUNT=$(find static -type f | wc -l)
    echo "Directorio static encontrado con $STATIC_SOURCE_COUNT archivos"

    # Mostrar archivos encontrados
    echo "Archivos est√°ticos encontrados:"
    find static -type f -name "*.css" | head -5 | sed 's/^/  CSS: /'
    find static -type f -name "*.js" | head -5 | sed 's/^/  JS: /'
    find static -type f -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" -o -name "*.gif" -o -name "*.svg" | head -5 | sed 's/^/  IMG: /'
else
    echo "‚ùå Error: Directorio static no encontrado"
    echo "Aseg√∫rate de que los archivos est√°ticos est√©n en el directorio 'static/'"
    exit 1
fi

# Crear directorio staticfiles si no existe
mkdir -p staticfiles

# Ejecutar collectstatic con opciones optimizadas
echo "Ejecutando collectstatic..."
echo "Comando: python3 manage.py collectstatic --noinput --clear --verbosity=1"

# Limpiar staticfiles completamente antes de collectstatic para forzar copia de banners
echo "üßπ Limpiando staticfiles completamente..."
echo "Contenido antes de limpiar:"
ls -la staticfiles/ 2>/dev/null || echo "staticfiles no existe o est√° vac√≠o"

# Forzar eliminaci√≥n completa
rm -rf staticfiles
mkdir -p staticfiles

echo "Contenido despu√©s de limpiar:"
ls -la staticfiles/

python3 manage.py collectstatic --noinput --verbosity=1

# Verificar el c√≥digo de salida de collectstatic
COLLECTSTATIC_EXIT_CODE=$?
echo "Collectstatic exit code: $COLLECTSTATIC_EXIT_CODE"

# Verificar inmediatamente qu√© se copi√≥
echo "Contenido de staticfiles inmediatamente despu√©s de collectstatic:"
find staticfiles -name "*.jpg" -o -name "banner*" | head -10

    # Verificar resultado
    if [ -d "staticfiles" ]; then
        STATIC_COUNT=$(find staticfiles -type f | wc -l)
        STATIC_SIZE=$(du -sh staticfiles 2>/dev/null | cut -f1)
        echo "‚úÖ Collectstatic completado exitosamente"
        echo "üìÅ Archivos est√°ticos procesados: $STATIC_COUNT archivos"
        echo "üìè Tama√±o total: ${STATIC_SIZE:-desconocido}"
        echo "üìç Ubicaci√≥n: $(pwd)/staticfiles"

        # Verificar que se crearon los archivos principales
        if [ -f "staticfiles/static/admin/css/base.css" ]; then
            echo "‚úÖ Archivos de Django Admin incluidos"
        fi

        if [ -d "staticfiles/static/css" ] && [ -d "staticfiles/static/js" ]; then
            echo "‚úÖ Archivos CSS y JS del proyecto incluidos"
        fi

        # Verificar banners espec√≠ficamente
        if [ -d "staticfiles/static/images/banners" ]; then
            BANNER_COUNT=$(find staticfiles/static/images/banners -type f | wc -l)
            echo "‚úÖ Banners encontrados: $BANNER_COUNT archivos"
            ls -la staticfiles/static/images/banners/
        else
            echo "‚ùå ERROR: Directorio de banners no encontrado en staticfiles"
        fi

        # Mostrar archivos generados
        echo "Archivos generados en staticfiles:"
        find staticfiles -name "*.css" | wc -l | sed 's/^/  CSS: /'
        find staticfiles -name "*.js" | wc -l | sed 's/^/  JS: /'
        find staticfiles -type f \( -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" -o -name "*.gif" -o -name "*.svg" \) | wc -l | sed 's/^/  Im√°genes: /'

        # Listar estructura de staticfiles
        echo "Estructura de staticfiles:"
        find staticfiles -type d | head -10

        # Verificar permisos
        echo "Permisos del directorio staticfiles:"
        ls -la staticfiles/

        # Verificaci√≥n FINAL de banners
        echo "üîç VERIFICACI√ìN FINAL DE BANNERS:"
        if [ -d "staticfiles/static/images/banners" ]; then
            BANNER_FINAL_COUNT=$(find staticfiles/static/images/banners -type f | wc -l)
            echo "‚úÖ Banners en staticfiles: $BANNER_FINAL_COUNT archivos"
            ls -la staticfiles/static/images/banners/

            # Verificar archivos espec√≠ficos
            if [ -f "staticfiles/static/images/banners/banner.jpg" ]; then
                echo "‚úÖ banner.jpg: COPIADO correctamente"
            else
                echo "‚ùå banner.jpg: NO se copi√≥"
            fi

            if [ -f "staticfiles/static/images/banners/banner1.jpg" ]; then
                echo "‚úÖ banner1.jpg: COPIADO correctamente"
            else
                echo "‚ùå banner1.jpg: NO se copi√≥"
            fi
        else
            echo "‚ùå ERROR CR√çTICO: Directorio de banners NO existe en staticfiles"
            echo "Esto causar√° que los banners no se carguen en producci√≥n"
        fi

    else
        echo "‚ùå Error: Directorio staticfiles no creado"
        echo "Revisa la configuraci√≥n de STATIC_ROOT en settings.py"
        exit 1
    fi

echo "‚úÖ Collectstatic completado - archivos est√°ticos listos para producci√≥n"
echo "üéØ Los banners deber√≠an cargar correctamente ahora"

# Crear usuario administrador
echo "Creando usuario administrador..."
python3 create_superuser.py

echo "Construcci√≥n completada exitosamente!"